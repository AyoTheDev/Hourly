ext {

    //Android Versions
    androidMinSdkVersion = 19
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28

    //Application Versions
    androidVersionCode = 1
    androidVersionName = "1.0"
    androidApplicationId = "com.ayo.hourly"

    //Library Versions
    buildToolsVersion = "28.0.3"
    androidSupportLibraryVersion = '27.1.1'

    retrofitVersion = '2.4.0'
    gsonVersion = '2.8.2'
    okHttpVersion = '3.10.0'
    mockitoVersion = '2.13.0'
    roomVersion = '2.1.0-alpha04'
    constraintLayoutVersion = '2.0.0-alpha3'
    timberVersion = '4.7.1'
    retrofitCoroutinesAdapterVersion = '0.9.2'
    kotlinCoroutinesVersion = '1.1.1'
    kotlinVersion = '1.3.21'
    daggerVersion = '2.21'
    navigationVersion = '1.0.0-rc02'
    lifecycleVersion = '2.0.0'
    appcompatVersion = '1.1.0-alpha02'

    ktxVersion = '1.0.1'

    firebaseVersion = '16.0.7'

    //todo probably don't need all these kotlin dependencies
    applicationDependencies = [

            kotlinExtensions         : "org.jetbrains.kotlin:kotlin-android-extensions:${kotlinVersion}",
            kotlinCore               : "androidx.core:core-ktx:${ktxVersion}",
            kotlinCoroutinesCore     : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
            kotlinCoroutinesAndroid  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}", //this library gives convenience methods for launching coroutines on the UI thread
            kotlin                   : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",

            supportRecyclerView      : "androidx.recyclerview:recyclerview:1.0.0",
            supportDesign            : "com.google.android.material:material:1.0.0-rc01",
            appCompat                : "androidx.appcompat:appcompat:${appcompatVersion}",
            viewModel                : "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}",
            viewModelExtensions      : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
            archRuntime              : "androidx.lifecycle:lifecycle-runtime:${lifecycleVersion}",
            reactiveStreams          : "androidx.arch.lifecycle:reactivestreams:${lifecycleVersion}",

            okHttp                   : "com.squareup.okhttp3:okhttp:${okHttpVersion}",//http client
            okHttpLogging            : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",//used to efficiently catch exceptions on the network
            retrofit                 : "com.squareup.retrofit2:retrofit:${retrofitVersion}",//http client
            retrofitGsonMap          : "com.squareup.retrofit2:converter-gson:${retrofitVersion}", //A Converter which uses Gson for serialization to and from JSON
            retrofitCoroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofitCoroutinesAdapterVersion}",//A Retrofit 2 CallAdapter.Factory for Kotlin coroutine's Deferred

            constraintLayout         : "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
            room                     : "androidx.room:room-runtime:${roomVersion}",
            roomCompiler             : "androidx.room:room-compiler:${roomVersion}",
            roomCoroutines           : "androidx.room:room-coroutines:${roomVersion}",
            navigation               : "android.arch.navigation:navigation-fragment:${navigationVersion}",
            navigationKtx            : "android.arch.navigation:navigation-fragment-ktx:${navigationVersion}",
            dagger                   : "com.google.dagger:dagger:${daggerVersion}",
            daggerSupport            : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor          : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            daggerCompiler           : "com.google.dagger:dagger-compiler:${daggerVersion}",
            timber                   : "com.jakewharton.timber:timber:${timberVersion}",
    ]

    //todo rename
    apiDependencies = [
            timber                   : "com.jakewharton.timber:timber:${timberVersion}",

            firebase                 : "com.google.firebase:firebase-core:${firebaseVersion}",
            firestore                : "com.google.firebase:firebase-firestore:18.0.1",
            kotlinExtensions         : "org.jetbrains.kotlin:kotlin-android-extensions:${kotlinVersion}",
            kotlinCore               : "androidx.core:core-ktx:${ktxVersion}",
            kotlinCoroutinesCore     : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}",
            kotlinCoroutinesAndroid  : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}",
            kotlin                   : "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}",

            appCompat                : "androidx.appcompat:appcompat:${appcompatVersion}",
            retrofit                 : "com.squareup.retrofit2:retrofit:${retrofitVersion}",//http client
            retrofitGsonMap          : "com.squareup.retrofit2:converter-gson:${retrofitVersion}", //A Converter which uses Gson for serialization to and from JSON
            retrofitCoroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${retrofitCoroutinesAdapterVersion}",//A Retrofit 2 CallAdapter.Factory for Kotlin coroutine's Deferred
            okHttp                   : "com.squareup.okhttp3:okhttp:${okHttpVersion}",//http client
            okHttpLogging            : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",//used to efficiently catch exceptions on the network
            gson                     : "com.google.code.gson:gson:${gsonVersion}",//used to cache data into gson and save them to shared preferences
            dagger                   : "com.google.dagger:dagger:${daggerVersion}",
            daggerSupport            : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor          : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            daggerCompiler           : "com.google.dagger:dagger-compiler:${daggerVersion}",
            room                     : "androidx.room:room-runtime:${roomVersion}",
            roomCompiler             : "androidx.room:room-compiler:${roomVersion}",
            roomCoroutines           : "androidx.room:room-coroutines:${roomVersion}"

    ]

    testDependencies = [
            mockito       : "org.mockito:mockito-core:${mockitoVersion}",
            mockitoAndroid: "org.mockito:mockito-android:${mockitoVersion}",
            mockitoInLine : "org.mockito:mockito-inline:${mockitoVersion}",
            junit         : "junit:junit:4.12",
            runner        : "com.android.support.test:runner:1.0.2",
            mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1",
            archCore      : "android.arch.core:core-testing:1.1.1"
    ]

}
